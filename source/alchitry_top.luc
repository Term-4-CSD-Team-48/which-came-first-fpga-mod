module alchitry_top (
    input clk,              // 100MHz clock
    input rst_n,            // reset button (active low)
    output led[8],          // 8 user controllable LEDs
    input usb_rx,           // USB->Serial input
    output usb_tx,          // USB->Serial output
    output io_led[3][8],    // LEDs on IO Shield
    output io_segment[8],   // 7-segment LEDs on IO Shield
    output io_select[4],    // Digit select on IO Shield
    input io_button[5],     // 5 buttons on IO Shield
    input io_dip[3][8]      // DIP switches on IO Shield
) {

    sig rst                 // reset signal

    .clk(clk) {
        // The reset conditioner is used to synchronize the reset signal to the FPGA
        // clock. This ensures the entire FPGA comes out of reset at the same time.
        reset_conditioner reset_cond
        .rst(rst) {
            which_came_first wcf
        }
    }

    always {
        reset_cond.in = ~rst_n  // input raw inverted reset signal
        rst = reset_cond.out    // conditioned reset

        led = c{3b0, io_button} // connect buttons to LEDs

        usb_tx = usb_rx         // loop serial port

        io_segment = 0
        io_select = 0

        io_led = io_dip       // connect the DIP switches to the LEDs
        
        wcf.btn_a = io_button[3]
        wcf.btn_b = io_button[4]
        wcf.reset_to_listening = io_button[1] // doesn't need to be a button
        
        io_led[0][1:0] = wcf.out
    }
}